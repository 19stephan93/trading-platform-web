name: Deploy - Live

on:
    push:
        branches: [ master ]

env:
    NPM_AUTH_TOKEN: ${{ secrets.GA_GITHUB_TOKEN }}

jobs:
    build:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v2
              with:
                  fetch-depth: 100 # rush change needs to have a reference to master branch.
            - name: Use Node.js 14.x
              uses: actions/setup-node@v2
              with:
                  always-auth: true
                  node-version: '14.x'
                  registry-url: 'https://npm.pkg.github.com'
            - name: Cache Node.js modules
              uses: actions/cache@v2
              with:
                # npm cache files are stored in `~/.npm` on Linux/macOS
                path: ~/.npm
                key: ${{ runner.OS }}-node-${{ hashFiles('**/package-lock.json') }}
                restore-keys: |
                  ${{ runner.OS }}-node-
                  ${{ runner.OS }}-
            - name: Install dependencies
              run: npm ci
              env:
                NODE_AUTH_TOKEN: ${{ secrets.GA_GITHUB_TOKEN }}
            - name: linter
              run: npm run lint
#            - name: test
#              run: npm test -- --watch=false --code-coverage
#            - name: e2e
#              run: npm run e2e
            - name: build
              run: npm run build:prod
            - name: Configure AWS Credentials
              uses: aws-actions/configure-aws-credentials@v1
              with:
                  aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                  aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                  aws-region: eu-central-1
                  role-to-assume: arn:aws:iam::677647715787:role/S3_DEPLOYER
                  role-duration-seconds: 1200
                  role-skip-session-tagging: true
            - name: Deploy app
              run: aws s3 sync .//dist/trading-platform-web/ s3://cdn-live.technovateit-solutions.com/bundles/${{ github.repository }} --delete --include '*.js' --content-type 'text/javascript' --include '*.css' --content-type 'text/css' 
            - name: Invalidate cloudfront cache
              run: |
                  aws cloudfront create-invalidation \
                  --distribution-id ${{ secrets.CDN_LIVE_DISTRIBUTION_ID }} \
                  --paths "/bundles/${{ github.repository }}/*"
